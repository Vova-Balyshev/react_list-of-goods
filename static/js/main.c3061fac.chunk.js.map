{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","reverse","setState","sortByAlpabet","ALPABET","sortByLength","LENGTH","reset","this","renderList","goods","visibleGoods","sort","good1","good2","localeCompare","length","getReorderedGoods","Stack","direction","spacing","className","Button","variant","type","onClick","color","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,gHAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,QAAU,WACR,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBATzB,EAaEK,cAAgB,WACd,EAAKD,SAAS,CAAEH,SAAUN,EAASW,WAdvC,EAiBEC,aAAe,WACb,EAAKH,SAAS,CAAEH,SAAUN,EAASa,UAlBvC,EAqBEC,MAAQ,WACN,EAAKL,SAAS,CAAEH,SAAUN,EAASO,OACnC,EAAKE,SAAS,CACZJ,YAAY,KAxBlB,4CA4BE,WAAU,IAAD,OACP,EAA4CU,KAAKZ,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SACzBU,EAhEV,SACEC,EACAX,EACAD,GAEA,IAAMa,EAAY,YAAOD,GAoBzB,OAlBIX,IAAaN,EAASO,MACxBW,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,KAAKN,EAASW,QACZ,OAAOS,EAAME,cAAcD,GAC7B,KAAKrB,EAASa,OACZ,OAAOO,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXlB,GACFa,EAAaV,UAGRU,EAuCcM,CAAkBvB,EAAiBK,EAAUD,GAEhE,OACE,cAACoB,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,SACE,sBAAKC,UAAU,MAAf,WACIxB,GACA,cAACyB,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,SACLC,QAAS,WACP,EAAKvB,UAAS,SAAAN,GAAK,kCACdA,GADc,IAEjBC,WAAW,QANjB,mBAcDA,GACC,qCACE,cAACyB,EAAA,EAAD,CACED,UAAU,SACVG,KAAK,SACLD,QAAQ,YACRE,QAASjB,KAAKL,cAJhB,iCAQA,cAACmB,EAAA,EAAD,CACED,UAAU,SACVG,KAAK,SACLD,QAAQ,YACRE,QAASjB,KAAKH,aAJhB,4BAQA,cAACiB,EAAA,EAAD,CACED,UAAU,SACVE,QAAQ,YACRC,KAAK,SACLC,QAASjB,KAAKP,QAJhB,qBAQA,cAACqB,EAAA,EAAD,CACEC,QAAQ,WACRG,MAAM,QACNF,KAAK,SACLC,QAASjB,KAAKD,MAJhB,mBAQA,oBAAIc,UAAU,QAAd,SACGZ,EAAWkB,KAAI,SAAAC,GAAI,OAClB,oBAAeP,UAAU,QAAzB,SACGO,GADMA,oBAtF3B,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c3061fac.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return good1.localeCompare(good2);\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlpabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE });\n    this.setState({\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n    const renderList = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n    return (\n      <Stack direction=\"row\" spacing={2}>\n        <div className=\"App\">\n          {!isStarted && (\n            <Button\n              variant=\"outlined\"\n              type=\"button\"\n              onClick={() => {\n                this.setState(state => ({\n                  ...state,\n                  isStarted: true,\n                }));\n              }}\n            >\n              Start\n            </Button>\n          )}\n\n          {isStarted && (\n            <>\n              <Button\n                className=\"button\"\n                type=\"button\"\n                variant=\"contained\"\n                onClick={this.sortByAlpabet}\n              >\n                Sort alphabetically\n              </Button>\n              <Button\n                className=\"button\"\n                type=\"button\"\n                variant=\"contained\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </Button>\n              <Button\n                className=\"button\"\n                variant=\"contained\"\n                type=\"button\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"error\"\n                type=\"button\"\n                onClick={this.reset}\n              >\n                Reset\n              </Button>\n              <ul className=\"Goods\">\n                {renderList.map(good => (\n                  <li key={good} className=\"goods\">\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n        </div>\n      </Stack>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}